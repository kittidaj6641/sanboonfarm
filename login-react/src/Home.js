import React, { useEffect, useState } from 'react';
import axios from 'axios';
import { useNavigate } from 'react-router-dom';
import { motion } from 'framer-motion';
import { BarChart, Info, Phone, LogOut, Search, Fish, AlertTriangle, Clock, Shrimp } from 'lucide-react'; // ‡∏•‡∏ö X ‡∏≠‡∏≠‡∏Å
import config from './config';
import { PieChart, Pie, Cell, Tooltip, ResponsiveContainer, Legend } from 'recharts';
import './Home.css';

const Home = () => {
    const navigate = useNavigate();
    const [modal, setModal] = useState({ isOpen: false, title: '', content: '' });
    const [waterData, setWaterData] = useState([]);
    const [error, setError] = useState('');

    useEffect(() => {
        document.body.style.minHeight = '100vh';
        document.body.style.margin = '0';

        const token = localStorage.getItem('token');
        if (!token) {
            navigate('/login');
            return;
        }

        const fetchWaterQuality = async () => {
            try {
                const response = await axios.get(`${config.API_BASE_URL}/member/water-quality`, {
                    headers: { Authorization: `Bearer ${token}` }
                });
                console.log('API Response:', response.data);
                if (response.data && response.data.length > 0) {
                    setWaterData(response.data);
                } else {
                    setError('‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏ô‡πâ‡∏≥‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');
                }
            } catch (err) {
                setError('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏ô‡πâ‡∏≥‡πÑ‡∏î‡πâ: ' + (err.response?.data?.error || err.message));
                console.error('Error fetching water quality:', err);
            }
        };

        fetchWaterQuality();

        return () => {
            document.body.style.minHeight = '';
            document.body.style.margin = '';
        };
    }, [navigate]);

    const handleLogout = async () => {
        const token = localStorage.getItem('token');
        try {
            const response = await axios.post(`${config.API_BASE_URL}/member/logout`, {}, {
                headers: { Authorization: `Bearer ${token}` }
            });
            if (response.status === 200) {
                localStorage.removeItem('token');
                navigate('/login');
            } else {
                alert('‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß');
            }
        } catch (error) {
            alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö');
            console.error(error);
        }
    };

    const openModal = (title, content) => {
        setModal({ isOpen: true, title, content });
    };

    const closeModal = () => {
        setModal({ isOpen: false, title: '', content: '' });
    };

    const latestData = waterData.length > 0 ? waterData[0] : null;
    console.log('Latest Data:', latestData);

    const chartData = latestData
        ? [
              { name: '‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ñ‡πá‡∏° (ppt)', value: Number(latestData.salinity) || 0 },
              { name: 'pH', value: Number(latestData.ph) || 0 },
              { name: '‡∏≠‡∏≠‡∏Å‡∏ã‡∏¥‡πÄ‡∏à‡∏ô (mg/L)', value: Number(latestData.dissolved_oxygen) || 0 },
              { name: '‡πÑ‡∏ô‡πÇ‡∏ï‡∏£‡πÄ‡∏à‡∏ô (mg/L)', value: Number(latestData.nitrogen) || 0 },
              { name: '‡πÑ‡∏Æ‡πÇ‡∏î‡∏£‡πÄ‡∏à‡∏ô‡∏ã‡∏±‡∏•‡πÑ‡∏ü‡∏î‡πå (mg/L)', value: Number(latestData.hydrogen_sulfide) || 0 },
              { name: 'BOD (mg/L)', value: Number(latestData.bod) || 0 },
              { name: '‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥ (¬∞C)', value: Number(latestData.temperature) || 0 },
          ]
        : [
              { name: '‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ñ‡πá‡∏° (ppt)', value: 0 },
              { name: 'pH', value: 0 },
              { name: '‡∏≠‡∏≠‡∏Å‡∏ã‡∏¥‡πÄ‡∏à‡∏ô (mg/L)', value: 0 },
              { name: '‡πÑ‡∏ô‡πÇ‡∏ï‡∏£‡πÄ‡∏à‡∏ô (mg/L)', value: 0 },
              { name: '‡πÑ‡∏Æ‡πÇ‡∏î‡∏£‡πÄ‡∏à‡∏ô‡∏ã‡∏±‡∏•‡πÑ‡∏ü‡∏î‡πå (mg/L)', value: 0 },
              { name: 'BOD (mg/L)', value: 0 },
              { name: '‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥ (¬∞C)', value: 0 },
          ];
    console.log('Chart Data:', chartData);

    const checkAlerts = () => {
        if (!latestData) {
            return '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏ô‡πâ‡∏≥‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö';
        }

        const alerts = [];

        if (latestData.salinity < 0 || latestData.salinity > 15) {
            alerts.push(`‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ñ‡πá‡∏° (${latestData.salinity} ppt) ‡∏≠‡∏¢‡∏π‡πà‡∏ô‡∏≠‡∏Å‡πÄ‡∏Å‡∏ì‡∏ë‡πå (‡∏Ñ‡∏ß‡∏£‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á 0-15 ppt)`);
        }

        if (latestData.ph < 7.0 || latestData.ph > 8.5) {
            alerts.push(`pH (${latestData.ph}) ‡∏≠‡∏¢‡∏π‡πà‡∏ô‡∏≠‡∏Å‡πÄ‡∏Å‡∏ì‡∏ë‡πå (‡∏Ñ‡∏ß‡∏£‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á 7.0-8.5)`);
        }

        if (latestData.dissolved_oxygen < 5) {
            alerts.push(`‡∏≠‡∏≠‡∏Å‡∏ã‡∏¥‡πÄ‡∏à‡∏ô‡∏•‡∏∞‡∏•‡∏≤‡∏¢‡∏ô‡πâ‡∏≥ (${latestData.dissolved_oxygen} mg/L) ‡∏ï‡πà‡∏≥‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ (‡∏Ñ‡∏ß‡∏£ ‚â• 5 mg/L)`);
        }

        if (latestData.nitrogen > 1) {
            alerts.push(`‡πÑ‡∏ô‡πÇ‡∏ï‡∏£‡πÄ‡∏à‡∏ô (${latestData.nitrogen} mg/L) ‡∏™‡∏π‡∏á‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ (‡∏Ñ‡∏ß‡∏£ ‚â§ 1 mg/L)`);
        }

        if (latestData.hydrogen_sulfide > 0.1) {
            alerts.push(`‡πÑ‡∏Æ‡πÇ‡∏î‡∏£‡πÄ‡∏à‡∏ô‡∏ã‡∏±‡∏•‡πÑ‡∏ü‡∏î‡πå (${latestData.hydrogen_sulfide} mg/L) ‡∏™‡∏π‡∏á‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ (‡∏Ñ‡∏ß‡∏£ ‚â§ 0.1 mg/L)`);
        }

        if (latestData.bod > 10) {
            alerts.push(`BOD (${latestData.bod} mg/L) ‡∏™‡∏π‡∏á‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ (‡∏Ñ‡∏ß‡∏£ ‚â§ 10 mg/L)`);
        }

        if (latestData.temperature < 26 || latestData.temperature > 32) {
            alerts.push(`‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥ (${latestData.temperature}¬∞C) ‡∏≠‡∏¢‡∏π‡πà‡∏ô‡∏≠‡∏Å‡πÄ‡∏Å‡∏ì‡∏ë‡πå (‡∏Ñ‡∏ß‡∏£‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á 26-32¬∞C)`);
        }

        if (alerts.length === 0) {
            return '‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏ô‡πâ‡∏≥‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÄ‡∏Å‡∏ì‡∏ë‡πå‡∏õ‡∏Å‡∏ï‡∏¥';
        }

        return alerts.join('\n');
    };

    const handleAlertClick = () => {
        const alertContent = checkAlerts();
        openModal('‚ö†Ô∏è ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏ô‡πâ‡∏≥', alertContent);
    };

    const fetchLoginLogs = async () => {
        const token = localStorage.getItem('token');
        console.log('Token:', token);
        if (!token) {
            openModal('üìú ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô', '‡πÑ‡∏°‡πà‡∏û‡∏ö token ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÉ‡∏´‡∏°‡πà');
            return;
        }

        try {
            const response = await axios.get(`${config.API_BASE_URL}/member/login-logs`, {
                headers: { Authorization: `Bearer ${token}` }
            });
            console.log('Login Logs Response:', response.data);
            if (response.data && response.data.length > 0) {
                const tableContent = `
                    <table class="login-logs-table">
                        <thead>
                            <tr>
                                <th>‡∏•‡∏≥‡∏î‡∏±‡∏ö</th>
                                <th>‡∏≠‡∏µ‡πÄ‡∏°‡∏•</th>
                                <th>‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô</th>
                                <th>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</th>
                            </tr>
                        </thead>
                        <tbody>
                            ${response.data
                                .map(
                                    (log, index) => `
                                        <tr>
                                            <td>${index + 1}</td>
                                            <td>${log.email}</td>
                                            <td>${new Date(log.login_time).toLocaleString('th-TH')}</td>
                                            <td class="${log.status === 'online' ? 'status-online' : 'status-offline'}">${log.status}</td>
                                        </tr>
                                    `
                                )
                                .join('')}
                        </tbody>
                    </table>
                `;
                openModal('üìú ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô', tableContent);
            } else {
                openModal('üìú ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô', '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô');
            }
        } catch (err) {
            console.error('Error fetching login logs:', err);
            let errorMessage = '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÑ‡∏î‡πâ';
            if (err.response) {
                errorMessage += `: ${err.response.status} - ${err.response.data?.error || err.message}`;
            } else if (err.request) {
                errorMessage += ': ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ';
            } else {
                errorMessage += `: ${err.message}`;
            }
            openModal('üìú ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô', errorMessage);
        }
    };

    const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#FF6384', '#36A2EB', '#FFCE56'];

    return (
        <motion.div
            initial={{ x: '100%' }}
            animate={{ x: 0 }}
            exit={{ x: '-100%' }}
            transition={{ duration: 0.5 }}
            className="home-page"
        >
            <header className="header">
                <nav className="nav">
                    <a href="/water-quality">
                        <BarChart size={18} /> ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏ô‡πâ‡∏≥
                    </a>
                    <a
                        href="#about"
                        onClick={(e) => {
                            e.preventDefault();
                            openModal(
                                '‚ÑπÔ∏è ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÄ‡∏£‡∏≤',
                                '‡∏ü‡∏≤‡∏£‡πå‡∏°‡∏Å‡∏∏‡πâ‡∏á‡∏Å‡πâ‡∏≤‡∏°‡∏Å‡∏£‡∏≤‡∏°‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏™‡∏π‡∏á ‡∏Å‡πà‡∏≠‡∏ï‡∏±‡πâ‡∏á‡∏õ‡∏µ 2545 ‡∏î‡πâ‡∏ß‡∏¢‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏Å‡∏ß‡πà‡∏≤ 20 ‡∏õ‡∏µ ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ú‡∏•‡∏¥‡∏ï‡πÅ‡∏•‡∏∞‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏Å‡∏∏‡πâ‡∏á‡∏Å‡πâ‡∏≤‡∏°‡∏Å‡∏£‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏™‡∏π‡∏á ‡∏ó‡∏±‡πâ‡∏á‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏≤‡∏∞‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå ‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏• ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß ‡πÄ‡∏£‡∏≤‡∏°‡∏∏‡πà‡∏á‡πÄ‡∏ô‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ‡πÅ‡∏•‡∏∞‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ó‡∏±‡∏ô‡∏™‡∏°‡∏±‡∏¢‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÑ‡∏î‡πâ‡∏ú‡∏•‡∏ú‡∏•‡∏¥‡∏ï‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏±‡πà‡∏á‡∏¢‡∏∑‡∏ô‡πÉ‡∏ô‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡∏™‡∏¥‡πà‡∏á‡πÅ‡∏ß‡∏î‡∏•‡πâ‡∏≠‡∏° ‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏ô‡πâ‡∏≥‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à‡πÉ‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡πÅ‡∏•‡∏∞‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á‡∏Å‡∏∏‡πâ‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£'
                            );
                        }}
                    >
                        <Info size={18} /> ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÄ‡∏£‡∏≤
                    </a>
                    <a
                        href="/shrimp-info"
                        onClick={(e) => {
                            e.preventDefault();
                            navigate('/shrimp-info');
                        }}
                    >
                        <Shrimp size={18} /> ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Å‡∏∏‡πâ‡∏á
                    </a>
                    <a
                        href="#contact"
                        onClick={(e) => {
                            e.preventDefault();
                            openModal(
                                'üìû ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏£‡∏≤',
                                '‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏£‡∏≤‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà:\nüìß farm@example.com\nüì± 123-456-7890'
                            );
                        }}
                    >
                        <Phone size={18} /> ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏£‡∏≤
                    </a>
                    <button
                        className="alert-btn"
                        onClick={handleAlertClick}
                    >
                        <AlertTriangle size={18} /> ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
                    </button>
                    <button
                        className="history-btn"
                        onClick={fetchLoginLogs}
                    >
                        <Clock size={18} /> ‡∏î‡∏π‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
                    </button>
                    <button className="logout-btn" onClick={handleLogout}>
                        <LogOut size={18} /> ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö
                    </button>
                </nav>
            </header>

            <div className="main-content">
                <div className="content-left"></div>
                <div className="content-right">
                    <h1><Fish size={32} /> ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà‡∏ü‡∏≤‡∏£‡πå‡∏°‡∏Å‡∏∏‡πâ‡∏á‡∏Å‡πâ‡∏≤‡∏°‡∏Å‡∏£‡∏≤‡∏°</h1>
                    <h2>‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏ô‡πâ‡∏≥‡∏ó‡∏µ‡πà‡∏î‡∏µ</h2>
                    <p>
                        ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ü‡∏≤‡∏£‡πå‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏î‡πâ‡∏ß‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏ô‡πâ‡∏≥‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏•‡πÑ‡∏ó‡∏°‡πå <br />
                        ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏£‡∏∞‡∏î‡∏±‡∏ö pH, ‡∏≠‡∏≠‡∏Å‡∏ã‡∏¥‡πÄ‡∏à‡∏ô‡∏•‡∏∞‡∏•‡∏≤‡∏¢‡∏ô‡πâ‡∏≥, ‡πÅ‡∏≠‡∏°‡πÇ‡∏°‡πÄ‡∏ô‡∏µ‡∏¢ ‡πÅ‡∏•‡∏∞‡πÑ‡∏ô‡πÑ‡∏ï‡∏£‡∏ï‡πå <br />
                        ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏™‡∏†‡∏≤‡∏û‡πÅ‡∏ß‡∏î‡∏•‡πâ‡∏≠‡∏°‡∏Ç‡∏≠‡∏á‡∏Å‡∏∏‡πâ‡∏á‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏à‡∏£‡∏¥‡∏ç‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï
                    </p>

                    {error && <p style={{ color: 'red', textAlign: 'center' }}>{error}</p>}

                    <div style={{ width: '100%', maxWidth: 400, height: 350, marginBottom: 20 }}>
                        <ResponsiveContainer width="100%" height="100%">
                            <PieChart>
                                <Pie
                                    data={chartData}
                                    dataKey="value"
                                    nameKey="name"
                                    outerRadius={130}
                                    fill="#8884d8"
                                >
                                    {chartData.map((entry, index) => (
                                        <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />
                                    ))}
                                </Pie>
                                <Tooltip />
                                <Legend verticalAlign="bottom" height={36} />
                            </PieChart>
                        </ResponsiveContainer>
                    </div>

                    <div className="button-group">
                        <button
                            className="action-btn"
                            onClick={() => navigate('/water-quality')}
                            style={{ marginTop: '10px' }}
                        >
                            <Search size={18} /> ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏ô‡πâ‡∏≥
                        </button>
                    </div>
                </div>
            </div>

            {modal.isOpen && (
                <div className="modal-overlay">
                    <div className="modal">
                        <h2>{modal.title}</h2>
                        <div
                            className="modal-content"
                            dangerouslySetInnerHTML={{ __html: modal.content }}
                        />
                        <button className="close-btn" onClick={closeModal}>
                            ‡∏õ‡∏¥‡∏î
                        </button>
                    </div>
                </div>
            )}
        </motion.div>
    );
};

export default Home;